name: Rust

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      LLVM_PROFILE_FILE: target/debug/coverage/cozal-%m.profraw

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Install nightly toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: nightly
        override: true
    
    - name: Install additional components
      run: |
        rustup component add llvm-tools-preview
        cargo install cargo-binutils
        cargo install --git https://github.com/maboesanman/cargo-llvm-codecov-converter.git

    - name: Build test binary
      run: |
        export EXECUTABLES=$(RUSTFLAGS="-Zinstrument-coverage -Clink-dead-code=on" cargo test --no-run --message-format=json | jq -r "select(.profile.test == true) | .executable")
        echo "EXECUTABLES=$EXECUTABLES" >> $GITHUB_ENV

    - name: Run tests
      run: $EXECUTABLES

    - name: Merge raw coverage
      run: cargo profdata -- merge -sparse target/debug/coverage/cozal-*.profraw -o target/debug/coverage/cozal.profdata
    
    - name: Collect coverage
      run: |
        cargo cov -- export $EXECUTABLES \
          --instr-profile=target/debug/coverage/cozal.profdata \
          --ignore-filename-regex="(.*\.cargo/registry/.*)|(.*\.rustup/.*)|(.*test.*)" \
          | cargo llvm-codecov-converter > target/debug/coverage/cozal.json

    - name: Upload coverage
      uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.codecov_token }}
        file: ./target/debug/coverage/cozal.json
        flags: Test
        name: Cargo Tests
        fail_ci_if_error: true
